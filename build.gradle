plugins {
    id("org.jetbrains.kotlin.jvm") version("1.5.21")
    id("org.jetbrains.kotlin.plugin.serialization") version("1.5.0")
    id("java")
    id("com.github.johnrengelman.shadow") version("7.0.0")
    id("org.cadixdev.licenser") version("0.6.0")
}

group "me.shedaniel"
sourceCompatibility = targetCompatibility = 1.8

license {
    include "**/*.kt"
    header = project.file("HEADER.txt")
    ext {
        name = "shedaniel"
        year = "2019, 2020, 2021"
    }
}

sourceSets {
    tricks {
        resources.srcDirs += rootProject.file("tricks")
    }
    discord_api
    main {
        compileClasspath += discord_api.compileClasspath + discord_api.output
        runtimeClasspath += discord_api.runtimeClasspath + discord_api.output
    }
    testDiscordApi {
        compileClasspath += discord_api.compileClasspath + discord_api.output
        runtimeClasspath += discord_api.runtimeClasspath + discord_api.output
    }
}

configurations {
    shadow {
        extendsFrom(implementation)
        extendsFrom(discord_apiImplementation)
    }
}

repositories {
    mavenCentral()
    maven { url "https://maven.fabricmc.net" }
    maven {
        url "https://jitpack.io"
        content {
            includeGroupByRegex "com(.\\w+)+"
        }
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation("me.shedaniel:linkie-core:1.0.87") {
        exclude module: "korio"
    }
    discord_apiImplementation("com.discord4j.discord4j:discord4j-core:bab624fb5e") {
        force = true
    }
//    compile("com.github.shadorc.discord4j:discord4j-core:217336e") {
//        force = true
//    }
    discord_apiImplementation('com.soywiz.korlibs.korio:korio-jvm:2.3.1') {
        exclude module: "kds"
        exclude module: "klock"
        exclude module: "klogger"
        exclude module: "krypto"
        exclude module: "kmem"
    }
    discord_apiImplementation('com.soywiz.korlibs.kds:kds-jvm:2.3.1')
    discord_apiImplementation('com.soywiz.korlibs.klock:klock-jvm:2.3.1')
    discord_apiImplementation('com.soywiz.korlibs.klogger:klogger-jvm:2.3.1')
    discord_apiImplementation('com.soywiz.korlibs.krypto:krypto-jvm:2.3.1')
    discord_apiImplementation('com.soywiz.korlibs.kmem:kmem-jvm:2.3.1')
    implementation 'org.graalvm.js:js-scriptengine:21.2.0'
    implementation 'org.graalvm.js:js:21.2.0'
    discord_apiImplementation "io.ktor:ktor-server-core:$ktor_version"
    discord_apiImplementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "com.github.shedaniel:CurseMetaApi:0.2"
    testDiscordApiImplementation "org.jetbrains.kotlin:kotlin-test-junit5:1.5.21"
//        exclude(module: "truffle-api")
//    compile("org.graalvm.sdk:graal-sdk:20.2.0")
//    compile("org.graalvm.truffle:truffle-api:20.2.0")
}

task tricksZip(type: Zip) {
    from sourceSets.tricks.resources
    archiveFileName.set "global-tricks.zip"
}

jar {
    classifier "raw"
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
    mergeServiceFiles()
}

task mainJar(type: Jar, dependsOn: [shadowJar, tasks.tricksZip]) {
    from zipTree(shadowJar.archiveFile.get())
    from tasks.compileDiscord_apiKotlin.outputs
    from tasks.tricksZip.archiveFile
    manifest {
        attributes(
                "Main-Class": "me.shedaniel.linkie.discord.LinkieBot"
        )
    }
}

build.finalizedBy mainJar

compileKotlin {
    kotlinOptions.suppressWarnings = true
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn", "-Xinline-classes"]
        languageVersion = "1.4"
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
