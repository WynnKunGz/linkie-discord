plugins {
    id("org.jetbrains.kotlin.jvm") version("1.4.0")
    id("org.jetbrains.kotlin.plugin.serialization") version("1.4.0")
    id("java")
    id("com.github.johnrengelman.shadow") version("5.2.0")
    id("net.minecrell.licenser") version("0.4.1")
}

group "me.shedaniel"
sourceCompatibility = targetCompatibility = 1.8

license {
    include "**/*.kt"
    header = project.file("HEADER.txt")
    ext {
        name = "shedaniel"
        year = "2019, 2020, 2021"
    }
}

configurations {
    shadow {
        extendsFrom(runtime)
    }
}

repositories {
    mavenCentral()
    maven { url "https://maven.fabricmc.net" }
    maven {
        url "https://jitpack.io"
        content {
            includeGroupByRegex "com(.\\w+)+"
        }
    }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://dl.bintray.com/korlibs/korlibs/" }
}

dependencies {
    compile("me.shedaniel:linkie-core:1.0.69")
    compile("com.discord4j:discord4j-core:3.1.3") {
        force = true
    }
//    compile("com.github.shadorc.discord4j:discord4j-core:217336e") {
//        force = true
//    }
    compile "org.graalvm.js:js-scriptengine:20.2.0"
    compile "org.graalvm.js:js:20.2.0"
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "com.github.shedaniel:CurseMetaApi:0.2"
//        exclude(module: "truffle-api")
//    compile("org.graalvm.sdk:graal-sdk:20.2.0")
//    compile("org.graalvm.truffle:truffle-api:20.2.0")
}

jar {
    manifest {
        attributes(
                "Main-Class": "me.shedaniel.linkie.discord.LinkieBot"
        )
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier null
}

compileKotlin {
    kotlinOptions.suppressWarnings = true
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn", "-Xinline-classes"]
        languageVersion = "1.4"
    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
